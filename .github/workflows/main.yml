name: CI

on: [push]

env:
  IMAGE_NAME: andremicocci/twitter-challenge

jobs:
  build-java:
    name: Build Java
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
 
    - uses: actions/upload-artifact@v1
      with:
       name: twitter-challenge.jar
       path: target/
 
  build-docker:
    name: Build Docker
    needs: [build-java]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
          name: twitter-challenge.jar
          path: target/

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag image

    - name: Log into registry
      run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login --username andremicocci --password-stdin
      
    - name: Push image
      run: |
        IMAGE_ID=docker.io/${{ github.repository }}
        
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest

        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION

        docker tag image $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION